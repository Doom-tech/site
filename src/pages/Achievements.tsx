import React, { useEffect } from 'react';
import styled from 'styled-components';
import { motion } from 'framer-motion';
import { Link } from 'react-router-dom';

const AchievementsPage = styled.div`
  min-height: 100vh;
  background-color: #0a0a0a;
  color: #fff;
  padding: 2rem 0;
`;

const Container = styled.div`
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 2rem;
`;

const Header = styled.header`
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 3rem;
`;

const Logo = styled(Link)`
  font-family: 'Orbitron', sans-serif;
  font-size: 1.8rem;
  font-weight: 700;
  color: #ff4500;
  display: flex;
  align-items: center;
  
  &:hover {
    text-shadow: 0 0 10px #ff4500;
  }
`;

const Navigation = styled.nav`
  display: flex;
  gap: 1.5rem;
`;

const NavLink = styled(Link)<{ $active?: boolean }>`
  font-family: 'Orbitron', sans-serif;
  font-size: 1.1rem;
  color: ${props => props.$active ? '#ff4500' : '#fff'};
  position: relative;
  padding: 0.5rem 0;
  
  &:after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: ${props => props.$active ? '100%' : '0'};
    height: 2px;
    background-color: #ff4500;
    transition: width 0.3s ease;
  }
  
  &:hover:after {
    width: 100%;
  }
`;

const Title = styled(motion.h1)`
  font-size: 3.5rem;
  font-weight: 700;
  margin-bottom: 2rem;
  text-transform: uppercase;
  background: linear-gradient(90deg, #ff4500, #ff8700);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  
  @media (max-width: 768px) {
    font-size: 2.5rem;
  }
`;

const AchievementsList = styled(motion.div)`
  margin-top: 3rem;
  display: grid;
  grid-template-columns: 1fr;
  gap: 2rem;
`;

const AchievementCard = styled(motion.div)`
  background: rgba(255, 255, 255, 0.05);
  border-radius: 15px;
  padding: 2rem;
  position: relative;
  overflow: hidden;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
  
  &:before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 5px;
    height: 100%;
    background: #ff4500;
  }
  
  &:hover {
    background: rgba(255, 255, 255, 0.08);
  }
`;

const AchievementHeader = styled.div`
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 1.5rem;
  
  @media (max-width: 768px) {
    flex-direction: column;
    align-items: flex-start;
    gap: 10px;
  }
`;

const AchievementTitle = styled.h2`
  font-size: 1.8rem;
  color: #fff;
`;

const AchievementDate = styled.span`
  padding: 5px 15px;
  background: rgba(255, 69, 0, 0.2);
  color: #ff4500;
  border-radius: 20px;
  font-size: 0.9rem;
  font-weight: 500;
`;

const AchievementDescription = styled.p`
  font-size: 1.1rem;
  line-height: 1.7;
  color: #cccccc;
  margin-bottom: 1.5rem;
`;

const AchievementTags = styled.div`
  display: flex;
  flex-wrap: wrap;
  gap: 10px;
  margin-top: 1rem;
`;

const AchievementTag = styled.span`
  padding: 5px 12px;
  background: rgba(255, 255, 255, 0.1);
  border-radius: 20px;
  font-size: 0.85rem;
  color: #aaaaaa;
`;

const CertificationsSection = styled(motion.section)`
  margin-top: 5rem;
`;

const CertificationsTitle = styled.h2`
  font-size: 2.5rem;
  margin-bottom: 2rem;
  color: #fff;
`;

const CertificationsGrid = styled.div`
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  gap: 2rem;
  
  @media (max-width: 768px) {
    grid-template-columns: 1fr;
  }
`;

const CertificationCard = styled(motion.div)`
  background: rgba(255, 255, 255, 0.05);
  border-radius: 15px;
  overflow: hidden;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
  transition: all 0.3s ease;
  
  &:hover {
    transform: translateY(-10px);
    box-shadow: 0 15px 40px rgba(255, 69, 0, 0.2);
  }
`;

const CertificationImage = styled.div<{ $image: string }>`
  width: 100%;
  height: 200px;
  background-image: url(${props => props.$image});
  background-size: cover;
  background-position: center;
  border-bottom: 3px solid #ff4500;
`;

const CertificationContent = styled.div`
  padding: 1.5rem;
`;

const CertificationTitle = styled.h3`
  font-size: 1.3rem;
  margin-bottom: 10px;
  color: #fff;
`;

const CertificationIssuer = styled.p`
  font-size: 1rem;
  color: #aaaaaa;
  margin-bottom: 10px;
`;

const CertificationDate = styled.span`
  display: inline-block;
  font-size: 0.9rem;
  color: #ff4500;
`;

const AwardsList = styled(motion.div)`
  margin-top: 4rem;
`;

const AwardsTitle = styled.h2`
  font-size: 2.5rem;
  margin-bottom: 2rem;
  color: #fff;
`;

const AwardItem = styled(motion.div)`
  display: flex;
  margin-bottom: 2rem;
  padding: 1.5rem;
  background: rgba(255, 255, 255, 0.05);
  border-radius: 15px;
  border-left: 5px solid #ff4500;
  transition: all 0.3s ease;
  
  &:hover {
    background: rgba(255, 255, 255, 0.08);
    transform: translateX(10px);
  }
  
  @media (max-width: 768px) {
    flex-direction: column;
  }
`;

const AwardIcon = styled.div`
  font-size: 2.5rem;
  margin-right: 1.5rem;
  color: #ff4500;
  
  @media (max-width: 768px) {
    margin-bottom: 1rem;
  }
`;

const AwardContent = styled.div`
  flex: 1;
`;

const AwardName = styled.h3`
  font-size: 1.5rem;
  margin-bottom: 10px;
  color: #fff;
`;

const AwardInfo = styled.p`
  font-size: 1rem;
  color: #cccccc;
`;

// –î–∞–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
const achievements = [
  {
    id: 1,
    title: "–ü–æ–±–µ–¥–∏—Ç–µ–ª—å –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–π –æ–ª–∏–º–ø–∏–∞–¥—ã Innopolis Open 2025",
    date: "2025",
    description: "–ó–∞–Ω—è–ª 1-–µ –º–µ—Å—Ç–æ –≤ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–π –æ–ª–∏–º–ø–∏–∞–¥–µ Innopolis Open 2025 –ø–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏, –ø—Ä–æ–¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä–æ–≤–∞–≤ –≤—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –∑–Ω–∞–Ω–∏–π –∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö –Ω–∞–≤—ã–∫–æ–≤.",
    tags: ["–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å", "–û–ª–∏–º–ø–∏–∞–¥–∞", "–ü–µ—Ä–≤–æ–µ –º–µ—Å—Ç–æ"]
  },
  {
    id: 2,
    title: "–ê–±—Å–æ–ª—é—Ç–Ω—ã–π –ü–æ–±–µ–¥–∏—Ç–µ–ª—å –ü–µ—Ä–≤–µ–Ω—Å—Ç–≤–∞ –†–æ—Å—Å–∏–∏ 2024",
    date: "2024",
    description: "–°—Ç–∞–ª –∞–±—Å–æ–ª—é—Ç–Ω—ã–º –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–º –ü–µ—Ä–≤–µ–Ω—Å—Ç–≤–∞ –†–æ—Å—Å–∏–∏ 2024 –ø–æ —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–º—É –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é —Å–∏—Å—Ç–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.",
    tags: ["–ü–µ—Ä–≤–µ–Ω—Å—Ç–≤–æ –†–æ—Å—Å–∏–∏", "CTF", "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å"]
  },
  {
    id: 3,
    title: "–ü–æ–±–µ–¥–∏—Ç–µ–ª—å –∫—É–±–∫–∞ –í–æ—Ä–æ–Ω–µ–∂—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏",
    date: "2024",
    description: "–ó–∞–Ω—è–ª 1-–µ –º–µ—Å—Ç–æ –≤ –∫—É–±–∫–µ –í–æ—Ä–æ–Ω–µ–∂—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏ –ø–æ —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–º—É –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é —Å–∏—Å—Ç–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.",
    tags: ["–ö–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å", "CTF", "–•–∞–∫–∞—Ç–æ–Ω"]
  },
  {
    id: 4,
    title: "–ü—Ä–∏–∑–æ–≤—ã–µ –º–µ—Å—Ç–∞ –Ω–∞ CTF —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è—Ö",
    date: "2024",
    description: "2-–µ –º–µ—Å—Ç–æ –Ω–∞ KubanCTF2024, 3-–µ –º–µ—Å—Ç–æ –Ω–∞ —á–µ–º–ø–∏–æ–Ω–∞—Ç–µ HackOsint, 4-–µ –º–µ—Å—Ç–æ –≤ —Å–æ—Å—Ç–∞–≤–µ –≥–æ—Å—Ç–µ–≤–æ–π –∫–æ–º–∞–Ω–¥—ã –Ω–∞ CenterCTF 2024.",
    tags: ["CTF", "–ö–æ–º–∞–Ω–¥–Ω–∞—è —Ä–∞–±–æ—Ç–∞", "–•–∞–∫–∞—Ç–æ–Ω"]
  },
  {
    id: 5,
    title: "–ü–æ–±–µ–¥–∏—Ç–µ–ª—å –ù–¢–û –ø–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏",
    date: "2023",
    description: "–°—Ç–∞–ª –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–º –Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–π –æ–ª–∏–º–ø–∏–∞–¥—ã –ø–æ –ø—Ä–æ—Ñ–∏–ª—é '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å'.",
    tags: ["–ù–¢–û", "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å", "–û–ª–∏–º–ø–∏–∞–¥–∞"]
  },
  {
    id: 6,
    title: "–õ—É—á—à–∏–π –¥–æ–∫–ª–∞–¥ –Ω–∞ –í—Å–µ—Ä–æ—Å—Å–∏–π—Å–∫–æ–π –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏",
    date: "2021",
    description: "–ü–æ–ª—É—á–∏–ª –¥–∏–ø–ª–æ–º –∑–∞ '–õ—É—á—à–∏–π –¥–æ–∫–ª–∞–¥ –Ω–∞ –í—Å–µ—Ä–æ—Å—Å–∏–π—Å–∫–æ–π –º–æ–ª–æ–¥–µ–∂–Ω–æ–π –Ω–∞—É—á–Ω–æ-—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –∫–æ—Ñ–µ—Ä–µ–Ω—Ü–∏–∏ '–†–∞–¥–∏–æ–ª–æ–∫–∞—Ü–∏—è –∏ —Å–≤—è–∑—å - –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏'.",
    tags: ["–ù–∞—É—á–Ω–∞—è –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—è", "–î–æ–∫–ª–∞–¥", "–î–∏–ø–ª–æ–º"]
  }
];

// –î–∞–Ω–Ω—ã–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
const certifications = [
  {
    id: 1,
    title: "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ –≤ –∫–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏",
    issuer: "Kaspersky",
    date: "2024",
    image: "https://placehold.co/600x400/111/333?text=Kaspersky"
  },
  {
    id: 2,
    title: "–ê–Ω–∞–ª–∏–∑ —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π –≤ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è—Ö",
    issuer: "–í–∫–æ–Ω—Ç–∞–∫—Ç–µ",
    date: "2024",
    image: "https://placehold.co/600x400/111/333?text=VK"
  },
  {
    id: 3,
    title: "Operator Red Team",
    issuer: "TryHackMe",
    date: "2024",
    image: "https://placehold.co/600x400/111/333?text=TryHackMe"
  },
  {
    id: 4,
    title: "–ö–æ–¥ –±—É–¥—É—â–µ–≥–æ",
    issuer: "–ú–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–æ —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ —Ä–∞–∑–≤–∏—Ç–∏—è –†–§",
    date: "2023",
    image: "https://placehold.co/600x400/111/333?text=–ú–∏–Ω—Ü–∏—Ñ—Ä—ã"
  },
  {
    id: 5,
    title: "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –Ω–∞ Java",
    issuer: "Samsung",
    date: "2019",
    image: "https://placehold.co/600x400/111/333?text=Samsung"
  }
];

// –î–∞–Ω–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥
const awards = [
  {
    id: 1,
    name: "–ß–ª–µ–Ω —Å–±–æ—Ä–Ω–æ–π –†–æ—Å—Å–∏–∏",
    info: "–ß–ª–µ–Ω —Å–±–æ—Ä–Ω–æ–π –†–æ—Å—Å–∏–∏ –ø–æ —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–º—É –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é —Å–∏—Å—Ç–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.",
    icon: "üèÜ"
  },
  {
    id: 2,
    name: "–ß–ª–µ–Ω —Å–±–æ—Ä–Ω–æ–π –ú–æ—Å–∫–≤—ã",
    info: "–ß–ª–µ–Ω —Å–±–æ—Ä–Ω–æ–π –ú–æ—Å–∫–≤—ã –ø–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.",
    icon: "ü•á"
  },
  {
    id: 3,
    name: "12 –º–µ—Å—Ç–æ –≤ —Ä–µ–π—Ç–∏–Ω–≥–µ CTFtime",
    info: "12 –º–µ—Å—Ç–æ –≤ —Ä–æ—Å—Å–∏–π—Å–∫–æ–º —Ä–µ–π—Ç–∏–Ω–≥–µ CTFtime - –æ–¥–Ω–æ–º –∏–∑ —Å–∞–º—ã—Ö –ø—Ä–µ—Å—Ç–∏–∂–Ω—ã—Ö –º–∏—Ä–æ–≤—ã—Ö —Ä–µ–π—Ç–∏–Ω–≥–æ–≤ –∫–æ–º–∞–Ω–¥ –ø–æ –∫–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.",
    icon: "üîê"
  },
  {
    id: 4,
    name: "–ù–∞—É—á–Ω–∞—è –ø—É–±–ª–∏–∫–∞—Ü–∏—è",
    info: "–ê–≤—Ç–æ—Ä –Ω–∞—É—á–Ω–æ–π —Å—Ç–∞—Ç—å–∏ '–ê–ª–≥–æ—Ä–∏—Ç–º —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Å –ø–æ–º–æ—â—å—é –∞–ª—å—Ñ–∞-–∫–∞–Ω–∞–ª–æ–≤', 2022 –≥–æ–¥.",
    icon: "üìù"
  },
  {
    id: 5,
    name: "–ü–æ–±–µ–¥–∏—Ç–µ–ª—å –≤—Å–µ—Ä–æ—Å—Å–∏–π—Å–∫–æ–≥–æ –∫–æ–Ω–∫—É—Ä—Å–∞",
    info: "–ü–æ–±–µ–¥–∏—Ç–µ–ª—å –≤—Å–µ—Ä–æ—Å—Å–∏–π—Å–∫–æ–≥–æ –∫–æ–Ω–∫—É—Ä—Å–∞ '–°–æ—Ç–≤–æ—Ä–∏ –±—É–¥—É—â–µ–µ' —Å—Ä–µ–¥–∏ —Å—Ç–∞—Ä—à–µ–∫–ª–∞—Å—Å–Ω–∏–∫–æ–≤ –∏ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –ø–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ –∫–∏–±–µ—Ä–Ω–µ—Ç–∏–∫–∞, 2021.",
    icon: "üèÖ"
  }
];

const Achievements: React.FC = () => {
  useEffect(() => {
    window.scrollTo(0, 0);
  }, []);

  const containerVariants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        staggerChildren: 0.3
      }
    }
  };

  const itemVariants = {
    hidden: { opacity: 0, y: 20 },
    visible: { opacity: 1, y: 0, transition: { duration: 0.5 } }
  };

  return (
    <AchievementsPage>
      <Container>
        <Header>
          <Logo to="/">Doom Tech</Logo>
          <Navigation>
            <NavLink to="/">–ì–ª–∞–≤–Ω–∞—è</NavLink>
            <NavLink to="/about">–û–±–æ –º–Ω–µ</NavLink>
            <NavLink to="/experience">–û–ø—ã—Ç</NavLink>
            <NavLink to="/portfolio">–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ</NavLink>
            <NavLink to="/achievements" $active={true}>–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è</NavLink>
          </Navigation>
        </Header>
        
        <Title
          initial={{ opacity: 0, y: -20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.5 }}
        >
          –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è
        </Title>
        
        <AchievementsList
          variants={containerVariants}
          initial="hidden"
          animate="visible"
        >
          {achievements.map((achievement, index) => (
            <AchievementCard
              key={achievement.id}
              variants={itemVariants}
              whileHover={{ x: 10 }}
              transition={{ duration: 0.3 }}
            >
              <AchievementHeader>
                <AchievementTitle>{achievement.title}</AchievementTitle>
                <AchievementDate>{achievement.date}</AchievementDate>
              </AchievementHeader>
              <AchievementDescription>{achievement.description}</AchievementDescription>
              <AchievementTags>
                {achievement.tags.map((tag, i) => (
                  <AchievementTag key={i}>{tag}</AchievementTag>
                ))}
              </AchievementTags>
            </AchievementCard>
          ))}
        </AchievementsList>
        
        <CertificationsSection
          initial={{ opacity: 0, y: 30 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6, delay: 0.3 }}
        >
          <CertificationsTitle>–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã</CertificationsTitle>
          <CertificationsGrid>
            {certifications.map((cert, index) => (
              <CertificationCard
                key={cert.id}
                initial={{ opacity: 0, y: 20 }}
                animate={{ 
                  opacity: 1, 
                  y: 0,
                  transition: { 
                    duration: 0.5,
                    delay: 0.4 + (index * 0.1)
                  }
                }}
              >
                <CertificationImage $image={cert.image} />
                <CertificationContent>
                  <CertificationTitle>{cert.title}</CertificationTitle>
                  <CertificationIssuer>{cert.issuer}</CertificationIssuer>
                  <CertificationDate>{cert.date}</CertificationDate>
                </CertificationContent>
              </CertificationCard>
            ))}
          </CertificationsGrid>
        </CertificationsSection>
        
        <AwardsList
          initial={{ opacity: 0, y: 30 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6, delay: 0.6 }}
        >
          <AwardsTitle>–ù–∞–≥—Ä–∞–¥—ã</AwardsTitle>
          
          {awards.map((award, index) => (
            <AwardItem
              key={award.id}
              initial={{ opacity: 0, x: -30 }}
              animate={{ 
                opacity: 1, 
                x: 0,
                transition: { 
                  duration: 0.5,
                  delay: 0.7 + (index * 0.1)
                }
              }}
            >
              <AwardIcon>{award.icon}</AwardIcon>
              <AwardContent>
                <AwardName>{award.name}</AwardName>
                <AwardInfo>{award.info}</AwardInfo>
              </AwardContent>
            </AwardItem>
          ))}
        </AwardsList>
      </Container>
    </AchievementsPage>
  );
};

export default Achievements; 